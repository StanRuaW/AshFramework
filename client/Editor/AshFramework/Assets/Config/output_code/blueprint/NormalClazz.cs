
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Plugin.Bright.Serialization;
using System.Collections.Generic;



namespace cfg.blueprint
{

public sealed partial class NormalClazz :  blueprint.Clazz 
{
    public NormalClazz(ByteBuf _buf)  : base(_buf) 
    {
        IsAbstract = _buf.ReadBool();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);Fields = new System.Collections.Generic.List<blueprint.Field>(n);for(var i = 0 ; i < n ; i++) { blueprint.Field _e;  _e = blueprint.Field.DeserializeField(_buf); Fields.Add(_e);}}
    }

    public static NormalClazz DeserializeNormalClazz(ByteBuf _buf)
    {
        return new blueprint.NormalClazz(_buf);
    }

    public bool IsAbstract { get; private set; }
    public System.Collections.Generic.List<blueprint.Field> Fields { get; private set; }

    public const int ID = -2073576778;
    public override int GetTypeId() => ID;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        foreach(var _e in Fields) { _e?.Resolve(_tables); }
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
        foreach(var _e in Fields) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "Parents:" + Plugin.Bright.Common.StringUtil.CollectionToString(Parents) + ","
        + "Methods:" + Plugin.Bright.Common.StringUtil.CollectionToString(Methods) + ","
        + "IsAbstract:" + IsAbstract + ","
        + "Fields:" + Plugin.Bright.Common.StringUtil.CollectionToString(Fields) + ","
        + "}";
    }
    }

}
