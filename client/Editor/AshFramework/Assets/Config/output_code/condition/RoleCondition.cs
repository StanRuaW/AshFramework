
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Plugin.Bright.Serialization;
using System.Collections.Generic;



namespace cfg.condition
{

public abstract partial class RoleCondition :  condition.Condition 
{
    public RoleCondition(ByteBuf _buf)  : base(_buf) 
    {
    }

    public static RoleCondition DeserializeRoleCondition(ByteBuf _buf)
    {
        switch (_buf.ReadInt())
        {
            case condition.MultiRoleCondition.ID: return new condition.MultiRoleCondition(_buf);
            case condition.GenderLimit.ID: return new condition.GenderLimit(_buf);
            case condition.MinLevel.ID: return new condition.MinLevel(_buf);
            case condition.MaxLevel.ID: return new condition.MaxLevel(_buf);
            case condition.MinMaxLevel.ID: return new condition.MinMaxLevel(_buf);
            case condition.ClothesPropertyScoreGreaterThan.ID: return new condition.ClothesPropertyScoreGreaterThan(_buf);
            case condition.ContainsItem.ID: return new condition.ContainsItem(_buf);
            default: throw new SerializationException();
        }
    }



    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "}";
    }
    }

}
