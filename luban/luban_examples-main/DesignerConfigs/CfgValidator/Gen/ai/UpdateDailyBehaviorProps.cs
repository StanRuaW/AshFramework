
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Bright.Serialization;
using System.Collections.Generic;
using System.Text.Json;



namespace cfg.ai
{

/// <summary>
/// 
/// </summary>
public sealed partial class UpdateDailyBehaviorProps :  ai.Service 
{
    public UpdateDailyBehaviorProps(JsonElement _json)  : base(_json) 
    {
        SatietyKey = _json.GetProperty("satiety_key").GetString();
        EnergyKey = _json.GetProperty("energy_key").GetString();
        MoodKey = _json.GetProperty("mood_key").GetString();
        SatietyLowerThresholdKey = _json.GetProperty("satiety_lower_threshold_key").GetString();
        SatietyUpperThresholdKey = _json.GetProperty("satiety_upper_threshold_key").GetString();
        EnergyLowerThresholdKey = _json.GetProperty("energy_lower_threshold_key").GetString();
        EnergyUpperThresholdKey = _json.GetProperty("energy_upper_threshold_key").GetString();
        MoodLowerThresholdKey = _json.GetProperty("mood_lower_threshold_key").GetString();
        MoodUpperThresholdKey = _json.GetProperty("mood_upper_threshold_key").GetString();
    }

    public UpdateDailyBehaviorProps(int id, string node_name, string satiety_key, string energy_key, string mood_key, string satiety_lower_threshold_key, string satiety_upper_threshold_key, string energy_lower_threshold_key, string energy_upper_threshold_key, string mood_lower_threshold_key, string mood_upper_threshold_key )  : base(id,node_name) 
    {
        this.SatietyKey = satiety_key;
        this.EnergyKey = energy_key;
        this.MoodKey = mood_key;
        this.SatietyLowerThresholdKey = satiety_lower_threshold_key;
        this.SatietyUpperThresholdKey = satiety_upper_threshold_key;
        this.EnergyLowerThresholdKey = energy_lower_threshold_key;
        this.EnergyUpperThresholdKey = energy_upper_threshold_key;
        this.MoodLowerThresholdKey = mood_lower_threshold_key;
        this.MoodUpperThresholdKey = mood_upper_threshold_key;
    }

    public static UpdateDailyBehaviorProps DeserializeUpdateDailyBehaviorProps(JsonElement _json)
    {
        return new ai.UpdateDailyBehaviorProps(_json);
    }

    /// <summary>
    /// 
    /// </summary>
    public readonly string SatietyKey;
    /// <summary>
    /// 
    /// </summary>
    public readonly string EnergyKey;
    /// <summary>
    /// 
    /// </summary>
    public readonly string MoodKey;
    /// <summary>
    /// 
    /// </summary>
    public readonly string SatietyLowerThresholdKey;
    /// <summary>
    /// 
    /// </summary>
    public readonly string SatietyUpperThresholdKey;
    /// <summary>
    /// 
    /// </summary>
    public readonly string EnergyLowerThresholdKey;
    /// <summary>
    /// 
    /// </summary>
    public readonly string EnergyUpperThresholdKey;
    /// <summary>
    /// 
    /// </summary>
    public readonly string MoodLowerThresholdKey;
    /// <summary>
    /// 
    /// </summary>
    public readonly string MoodUpperThresholdKey;

    public const int ID = -61887372;
    public override int GetTypeId() => ID;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        OnResolveFinish(_tables);
    }

    partial void OnResolveFinish(Dictionary<string, object> _tables);

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "NodeName:" + NodeName + ","
        + "SatietyKey:" + SatietyKey + ","
        + "EnergyKey:" + EnergyKey + ","
        + "MoodKey:" + MoodKey + ","
        + "SatietyLowerThresholdKey:" + SatietyLowerThresholdKey + ","
        + "SatietyUpperThresholdKey:" + SatietyUpperThresholdKey + ","
        + "EnergyLowerThresholdKey:" + EnergyLowerThresholdKey + ","
        + "EnergyUpperThresholdKey:" + EnergyUpperThresholdKey + ","
        + "MoodLowerThresholdKey:" + MoodLowerThresholdKey + ","
        + "MoodUpperThresholdKey:" + MoodUpperThresholdKey + ","
        + "}";
    }
    }
}

