
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Bright.Serialization;
using System.Collections.Generic;
using System.Text.Json;



namespace cfg.bonus
{

/// <summary>
/// 
/// </summary>
public sealed partial class DropInfo :  Bright.Config.BeanBase 
{
    public DropInfo(JsonElement _json) 
    {
        Id = _json.GetProperty("id").GetInt32();
        Desc = _json.GetProperty("desc").GetString();
        { var _json0 = _json.GetProperty("client_show_items"); ClientShowItems = new System.Collections.Generic.List<bonus.ShowItemInfo>(_json0.GetArrayLength()); foreach(JsonElement __e in _json0.EnumerateArray()) { bonus.ShowItemInfo __v;  __v =  bonus.ShowItemInfo.DeserializeShowItemInfo(__e);  ClientShowItems.Add(__v); }   }
        Bonus =  bonus.Bonus.DeserializeBonus(_json.GetProperty("bonus"));
    }

    public DropInfo(int id, string desc, System.Collections.Generic.List<bonus.ShowItemInfo> client_show_items, bonus.Bonus bonus ) 
    {
        this.Id = id;
        this.Desc = desc;
        this.ClientShowItems = client_show_items;
        this.Bonus = bonus;
    }

    public static DropInfo DeserializeDropInfo(JsonElement _json)
    {
        return new bonus.DropInfo(_json);
    }

    /// <summary>
    /// 
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 
    /// </summary>
    public readonly string Desc;
    /// <summary>
    /// 
    /// </summary>
    public readonly System.Collections.Generic.List<bonus.ShowItemInfo> ClientShowItems;
    /// <summary>
    /// 
    /// </summary>
    public readonly bonus.Bonus Bonus;

    public const int ID = -2014781108;
    public override int GetTypeId() => ID;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in ClientShowItems) { _e?.Resolve(_tables); }
        Bonus?.Resolve(_tables);
        OnResolveFinish(_tables);
    }

    partial void OnResolveFinish(Dictionary<string, object> _tables);

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Desc:" + Desc + ","
        + "ClientShowItems:" + Bright.Common.StringUtil.CollectionToString(ClientShowItems) + ","
        + "Bonus:" + Bonus + ","
        + "}";
    }
    }
}

