
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg.item;

import bright.serialization.*;



public final class InteractionItem extends  cfg.item.ItemExtra 
{
    public InteractionItem(ByteBuf _buf)
    { 
        super(_buf);
        if(_buf.readBool()){ attackNum = _buf.readInt(); } else { attackNum = null; }
        holdingStaticMesh = _buf.readString();
        holdingStaticMeshMat = _buf.readString();
    }

    public InteractionItem(int id, Integer attack_num, String holding_static_mesh, String holding_static_mesh_mat )
    {
        super(id);
        this.attackNum = attack_num;
        this.holdingStaticMesh = holding_static_mesh;
        this.holdingStaticMeshMat = holding_static_mesh_mat;
    }

    public static InteractionItem deserializeInteractionItem(ByteBuf _buf)
    {
        return new InteractionItem(_buf);
    }

    public final Integer attackNum;
    public final String holdingStaticMesh;
    public final String holdingStaticMeshMat;

    public static final int ID = 640937802;

    @Override
    public int getTypeId() { return ID; }

    @Override
    public void serialize(ByteBuf os)
    {
        throw new UnsupportedOperationException();
    }

    @Override
    public void deserialize(ByteBuf os)
    {
        throw new UnsupportedOperationException();
    }

    public void resolve(java.util.HashMap<String, Object> _tables)
    {
        super.resolve(_tables);
    }

    @Override
    public String toString()
    {
        return "{ "
        + "id:" + id + ","
        + "attackNum:" + attackNum + ","
        + "holdingStaticMesh:" + holdingStaticMesh + ","
        + "holdingStaticMeshMat:" + holdingStaticMeshMat + ","
        + "}";
    }
}

