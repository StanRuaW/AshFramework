
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg.ai;

import bright.serialization.*;



public abstract class Node extends  bright.serialization.AbstractBean 
{
    public Node(ByteBuf _buf)
    { 
        id = _buf.readInt();
        nodeName = _buf.readString();
    }

    public Node(int id, String node_name )
    {
        this.id = id;
        this.nodeName = node_name;
    }

    public static Node deserializeNode(ByteBuf _buf)
    {
        switch (_buf.readInt())
        {
            case cfg.ai.UeSetDefaultFocus.ID: return new cfg.ai.UeSetDefaultFocus(_buf);
            case cfg.ai.ExecuteTimeStatistic.ID: return new cfg.ai.ExecuteTimeStatistic(_buf);
            case cfg.ai.ChooseTarget.ID: return new cfg.ai.ChooseTarget(_buf);
            case cfg.ai.KeepFaceTarget.ID: return new cfg.ai.KeepFaceTarget(_buf);
            case cfg.ai.GetOwnerPlayer.ID: return new cfg.ai.GetOwnerPlayer(_buf);
            case cfg.ai.UpdateDailyBehaviorProps.ID: return new cfg.ai.UpdateDailyBehaviorProps(_buf);
            case cfg.ai.UeLoop.ID: return new cfg.ai.UeLoop(_buf);
            case cfg.ai.UeCooldown.ID: return new cfg.ai.UeCooldown(_buf);
            case cfg.ai.UeTimeLimit.ID: return new cfg.ai.UeTimeLimit(_buf);
            case cfg.ai.UeBlackboard.ID: return new cfg.ai.UeBlackboard(_buf);
            case cfg.ai.UeForceSuccess.ID: return new cfg.ai.UeForceSuccess(_buf);
            case cfg.ai.IsAtLocation.ID: return new cfg.ai.IsAtLocation(_buf);
            case cfg.ai.DistanceLessThan.ID: return new cfg.ai.DistanceLessThan(_buf);
            case cfg.ai.Sequence.ID: return new cfg.ai.Sequence(_buf);
            case cfg.ai.Selector.ID: return new cfg.ai.Selector(_buf);
            case cfg.ai.SimpleParallel.ID: return new cfg.ai.SimpleParallel(_buf);
            case cfg.ai.UeWait.ID: return new cfg.ai.UeWait(_buf);
            case cfg.ai.UeWaitBlackboardTime.ID: return new cfg.ai.UeWaitBlackboardTime(_buf);
            case cfg.ai.MoveToTarget.ID: return new cfg.ai.MoveToTarget(_buf);
            case cfg.ai.ChooseSkill.ID: return new cfg.ai.ChooseSkill(_buf);
            case cfg.ai.MoveToRandomLocation.ID: return new cfg.ai.MoveToRandomLocation(_buf);
            case cfg.ai.MoveToLocation.ID: return new cfg.ai.MoveToLocation(_buf);
            case cfg.ai.DebugPrint.ID: return new cfg.ai.DebugPrint(_buf);
            default: throw new SerializationException();
        }
    }

    public final int id;
    public final String nodeName;


    @Override
    public void serialize(ByteBuf os)
    {
        throw new UnsupportedOperationException();
    }

    @Override
    public void deserialize(ByteBuf os)
    {
        throw new UnsupportedOperationException();
    }

    public void resolve(java.util.HashMap<String, Object> _tables)
    {
    }

    @Override
    public String toString()
    {
        return "{ "
        + "id:" + id + ","
        + "nodeName:" + nodeName + ","
        + "}";
    }
}

