
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Bright.Serialization;
using System.Collections.Generic;
using System.Text.Json;



namespace cfg.mail
{

public sealed partial class GlobalMail :  Bright.Config.BeanBase 
{
    public GlobalMail(JsonElement _json) 
    {
        Id = _json.GetProperty("id").GetInt32();
        Title = _json.GetProperty("title").GetString();
        Sender = _json.GetProperty("sender").GetString();
        Content = _json.GetProperty("content").GetString();
        { var _json0 = _json.GetProperty("award"); Award = new System.Collections.Generic.List<int>(_json0.GetArrayLength()); foreach(JsonElement __e in _json0.EnumerateArray()) { int __v;  __v = __e.GetInt32();  Award.Add(__v); }   }
        AllServer = _json.GetProperty("all_server").GetBoolean();
        { var _json0 = _json.GetProperty("server_list"); ServerList = new System.Collections.Generic.List<int>(_json0.GetArrayLength()); foreach(JsonElement __e in _json0.EnumerateArray()) { int __v;  __v = __e.GetInt32();  ServerList.Add(__v); }   }
        Platform = _json.GetProperty("platform").GetString();
        Channel = _json.GetProperty("channel").GetString();
        MinMaxLevel =  condition.MinMaxLevel.DeserializeMinMaxLevel(_json.GetProperty("min_max_level"));
        RegisterTime =  condition.TimeRange.DeserializeTimeRange(_json.GetProperty("register_time"));
        MailTime =  condition.TimeRange.DeserializeTimeRange(_json.GetProperty("mail_time"));
    }

    public GlobalMail(int id, string title, string sender, string content, System.Collections.Generic.List<int> award, bool all_server, System.Collections.Generic.List<int> server_list, string platform, string channel, condition.MinMaxLevel min_max_level, condition.TimeRange register_time, condition.TimeRange mail_time ) 
    {
        this.Id = id;
        this.Title = title;
        this.Sender = sender;
        this.Content = content;
        this.Award = award;
        this.AllServer = all_server;
        this.ServerList = server_list;
        this.Platform = platform;
        this.Channel = channel;
        this.MinMaxLevel = min_max_level;
        this.RegisterTime = register_time;
        this.MailTime = mail_time;
    }

    public static GlobalMail DeserializeGlobalMail(JsonElement _json)
    {
        return new mail.GlobalMail(_json);
    }

    public readonly int Id;
    public readonly string Title;
    public readonly string Sender;
    public readonly string Content;
    public readonly System.Collections.Generic.List<int> Award;
    public readonly bool AllServer;
    public readonly System.Collections.Generic.List<int> ServerList;
    public readonly string Platform;
    public readonly string Channel;
    public readonly condition.MinMaxLevel MinMaxLevel;
    public readonly condition.TimeRange RegisterTime;
    public readonly condition.TimeRange MailTime;

    public const int ID = -287571791;
    public override int GetTypeId() => ID;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        MinMaxLevel?.Resolve(_tables);
        RegisterTime?.Resolve(_tables);
        MailTime?.Resolve(_tables);
        OnResolveFinish(_tables);
    }

    partial void OnResolveFinish(Dictionary<string, object> _tables);

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Title:" + Title + ","
        + "Sender:" + Sender + ","
        + "Content:" + Content + ","
        + "Award:" + Bright.Common.StringUtil.CollectionToString(Award) + ","
        + "AllServer:" + AllServer + ","
        + "ServerList:" + Bright.Common.StringUtil.CollectionToString(ServerList) + ","
        + "Platform:" + Platform + ","
        + "Channel:" + Channel + ","
        + "MinMaxLevel:" + MinMaxLevel + ","
        + "RegisterTime:" + RegisterTime + ","
        + "MailTime:" + MailTime + ","
        + "}";
    }
    }
}

