
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.ai
{

public sealed partial class UeBlackboard :  ai.Decorator 
{
    public UeBlackboard(JSONNode _json)  : base(_json) 
    {
        { if(!_json["notify_observer"].IsNumber) { throw new SerializationException(); }  NotifyObserver = (ai.ENotifyObserverMode)_json["notify_observer"].AsInt; }
        { if(!_json["blackboard_key"].IsString) { throw new SerializationException(); }  BlackboardKey = _json["blackboard_key"]; }
        { if(!_json["key_query"].IsObject) { throw new SerializationException(); }  KeyQuery = ai.KeyQueryOperator.DeserializeKeyQueryOperator(_json["key_query"]); }
    }

    public UeBlackboard(int id, string node_name, ai.EFlowAbortMode flow_abort_mode, ai.ENotifyObserverMode notify_observer, string blackboard_key, ai.KeyQueryOperator key_query )  : base(id,node_name,flow_abort_mode) 
    {
        this.NotifyObserver = notify_observer;
        this.BlackboardKey = blackboard_key;
        this.KeyQuery = key_query;
    }

    public static UeBlackboard DeserializeUeBlackboard(JSONNode _json)
    {
        return new ai.UeBlackboard(_json);
    }

    public readonly ai.ENotifyObserverMode NotifyObserver;
    public readonly string BlackboardKey;
    public readonly ai.KeyQueryOperator KeyQuery;

    public const int ID = -315297507;
    public override int GetTypeId() => ID;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        KeyQuery?.Resolve(_tables);
        OnResolveFinish(_tables);
    }

    partial void OnResolveFinish(Dictionary<string, object> _tables);

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "NodeName:" + NodeName + ","
        + "FlowAbortMode:" + FlowAbortMode + ","
        + "NotifyObserver:" + NotifyObserver + ","
        + "BlackboardKey:" + BlackboardKey + ","
        + "KeyQuery:" + KeyQuery + ","
        + "}";
    }
    }
}

