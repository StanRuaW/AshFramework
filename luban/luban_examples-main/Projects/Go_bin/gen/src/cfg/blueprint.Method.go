
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package cfg

import (
    "bright/serialization"
)

import "errors"

type Blueprint_Method struct {
    Name string
    Desc string
    IsStatic bool
    ReturnType string
    Parameters []*Blueprint_ParamInfo
}


func NewBlueprint_Method(_buf *serialization.ByteBuf) (_v interface{}, err error) {
    var id int32
    if id, err = _buf.ReadInt() ; err != nil {
        return
    }
    switch id {
        case -392137809: return NewBlueprint_AbstraceMethod(_buf)
        case 1739079015: return NewBlueprint_ExternalMethod(_buf)
        case -696408103: return NewBlueprint_BlueprintMethod(_buf)
        default: return nil, errors.New("unknown type id")
    }
    return
}

func NewBlueprint_Method_Body(_buf *serialization.ByteBuf) (_v *Blueprint_Method, err error) {
    _v = &Blueprint_Method{}
    { if _v.Name, err = _buf.ReadString(); err != nil { return } }
    { if _v.Desc, err = _buf.ReadString(); err != nil { return } }
    { if _v.IsStatic, err = _buf.ReadBool(); err != nil { return } }
    { if _v.ReturnType, err = _buf.ReadString(); err != nil { return } }
     {
                _v.Parameters = make([]*Blueprint_ParamInfo, 0)
                var _n_ int
                if _n_, err = _buf.ReadSize(); err != nil {return}
                for i := 0 ; i < _n_ ; i++ {
                    var _e_ *Blueprint_ParamInfo
                    { if _e_, err = NewBlueprint_ParamInfo(_buf); err != nil { return } }
                    _v.Parameters = append(_v.Parameters, _e_)
                }
            }

    return
}


