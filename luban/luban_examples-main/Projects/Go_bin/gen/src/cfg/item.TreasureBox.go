
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package cfg

import (
    "bright/serialization"
)



type Item_TreasureBox struct {
    Item_ItemExtra
    KeyItemId *int32
    OpenLevel *Condition_MinLevel
    UseOnObtain bool
    DropIds []int32
    ChooseList []*Item_ChooseOneBonus
}

func (Item_TreasureBox) GetTypeId() int {
    return 1494222369
}

func NewItem_TreasureBox(_buf *serialization.ByteBuf) (_v *Item_TreasureBox, err error) {
    _v = &Item_TreasureBox{}
    var _p *Item_ItemExtra
     if _p, err = NewItem_ItemExtra_Body(_buf) ; err != nil { return }
    _v.Item_ItemExtra = *_p
    { var __exists__ bool; if __exists__, err = _buf.ReadBool(); err != nil { return }; if __exists__ { var __x__ int32;  { if __x__, err = _buf.ReadInt(); err != nil { return } }; _v.KeyItemId = &__x__ }}
    { if _v.OpenLevel, err = NewCondition_MinLevel(_buf); err != nil { return } }
    { if _v.UseOnObtain, err = _buf.ReadBool(); err != nil { return } }
     {
                _v.DropIds = make([]int32, 0)
                var _n_ int
                if _n_, err = _buf.ReadSize(); err != nil {return}
                for i := 0 ; i < _n_ ; i++ {
                    var _e_ int32
                    { if _e_, err = _buf.ReadInt(); err != nil { return } }
                    _v.DropIds = append(_v.DropIds, _e_)
                }
            }

     {
                _v.ChooseList = make([]*Item_ChooseOneBonus, 0)
                var _n_ int
                if _n_, err = _buf.ReadSize(); err != nil {return}
                for i := 0 ; i < _n_ ; i++ {
                    var _e_ *Item_ChooseOneBonus
                    { if _e_, err = NewItem_ChooseOneBonus(_buf); err != nil { return } }
                    _v.ChooseList = append(_v.ChooseList, _e_)
                }
            }

    return
}

