
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package cfg

import (
    "bright/serialization"
)



type Mail_GlobalMail struct {
    Id int32
    Title string
    Sender string
    Content string
    Award []int32
    AllServer bool
    ServerList []int32
    Platform string
    Channel string
    MinMaxLevel *Condition_MinMaxLevel
    RegisterTime *Condition_TimeRange
    MailTime *Condition_TimeRange
}

func (Mail_GlobalMail) GetTypeId() int {
    return -287571791
}

func NewMail_GlobalMail(_buf *serialization.ByteBuf) (_v *Mail_GlobalMail, err error) {
    _v = &Mail_GlobalMail{}
    { if _v.Id, err = _buf.ReadInt(); err != nil { return } }
    { if _v.Title, err = _buf.ReadString(); err != nil { return } }
    { if _v.Sender, err = _buf.ReadString(); err != nil { return } }
    { if _v.Content, err = _buf.ReadString(); err != nil { return } }
     {
                _v.Award = make([]int32, 0)
                var _n_ int
                if _n_, err = _buf.ReadSize(); err != nil {return}
                for i := 0 ; i < _n_ ; i++ {
                    var _e_ int32
                    { if _e_, err = _buf.ReadInt(); err != nil { return } }
                    _v.Award = append(_v.Award, _e_)
                }
            }

    { if _v.AllServer, err = _buf.ReadBool(); err != nil { return } }
     {
                _v.ServerList = make([]int32, 0)
                var _n_ int
                if _n_, err = _buf.ReadSize(); err != nil {return}
                for i := 0 ; i < _n_ ; i++ {
                    var _e_ int32
                    { if _e_, err = _buf.ReadInt(); err != nil { return } }
                    _v.ServerList = append(_v.ServerList, _e_)
                }
            }

    { if _v.Platform, err = _buf.ReadString(); err != nil { return } }
    { if _v.Channel, err = _buf.ReadString(); err != nil { return } }
    { if _v.MinMaxLevel, err = NewCondition_MinMaxLevel(_buf); err != nil { return } }
    { if _v.RegisterTime, err = NewCondition_TimeRange(_buf); err != nil { return } }
    { if _v.MailTime, err = NewCondition_TimeRange(_buf); err != nil { return } }
    return
}

