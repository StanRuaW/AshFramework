
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package cfg

import (
    "bright/serialization"
)

import "errors"

type Limit_LimitBase struct {
}


func NewLimit_LimitBase(_buf *serialization.ByteBuf) (_v interface{}, err error) {
    var id int32
    if id, err = _buf.ReadInt() ; err != nil {
        return
    }
    switch id {
        case 303235413: return NewLimit_DailyLimit(_buf)
        case -1753629499: return NewLimit_MultiDayLimit(_buf)
        case -252187161: return NewLimit_WeeklyLimit(_buf)
        case 2063279905: return NewLimit_MonthlyLimit(_buf)
        case -1366194050: return NewLimit_CoolDown(_buf)
        case 394328599: return NewLimit_GroupCoolDown(_buf)
        default: return nil, errors.New("unknown type id")
    }
    return
}

func NewLimit_LimitBase_Body(_buf *serialization.ByteBuf) (_v *Limit_LimitBase, err error) {
    _v = &Limit_LimitBase{}
    return
}


